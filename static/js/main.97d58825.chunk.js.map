{"version":3,"sources":["PeopleTable.tsx","Home.tsx","PersonRow.tsx","People.tsx","api.js","NotFound.tsx","Header.tsx","App.tsx","index.tsx"],"names":["SortOrder","Home","PersonRow","person","slug","useParams","useSearchParams","searchParams","classNamePerson","sex","highlighted","className","to","name","born","died","fatherName","father","motherName","mother","PeopleTable","people","setSearchParams","useState","delayTimer","setDelayTimer","get","searchQuery","setSearchQuery","searchString","sortHandler","sortBy","prevParams","Object","fromEntries","ASC","order","DESC","sortedPeople","useMemo","undefined","peopleCopy","sort","a","b","localeCompare","genClass","title","title__star","title__IconASC","title__IconDESC","value","type","onChange","e","clearTimeout","target","setTimeout","query","classnames","onClick","filter","toLowerCase","includes","map","People","setPeople","useEffect","fetch","then","response","json","peopleArray","extendedPeople","personCopy","find","person2","NotFound","Header","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.97d58825.chunk.js","sourcesContent":["import { useSearchParams } from 'react-router-dom';\nimport { useState, useMemo } from 'react';\nimport classnames from 'classnames';\nimport { PersonRow } from './PersonRow';\nimport './PeopleTable.scss';\n\ntype Props = {\n  people: Person[] | undefined\n};\n\nenum SortOrder {\n  ASC = 'ASC',\n  DESC = 'DESC',\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [delayTimer, setDelayTimer] = useState<NodeJS.Timeout>();\n  const [searchQuery, setSearchQuery] = useState(\n    searchParams.get('query') || '',\n  );\n\n  const searchString = searchParams.get('query') || '';\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (delayTimer) {\n      clearTimeout(delayTimer);\n    }\n\n    setSearchQuery(e.target.value);\n    setDelayTimer(setTimeout(() => {\n      const prevParams = Object.fromEntries(searchParams);\n\n      setSearchParams({ ...prevParams, query: e.target.value });\n    }, 500));\n  };\n\n  const sortHandler = (sortBy: string) => () => {\n    const prevParams = Object.fromEntries(searchParams);\n\n    if (sortBy === searchParams.get('sortBy')\n      && SortOrder.ASC === searchParams.get('order')) {\n      setSearchParams({ ...prevParams, sortBy, order: SortOrder.DESC });\n    } else {\n      setSearchParams({ ...prevParams, sortBy, order: SortOrder.ASC });\n    }\n  };\n\n  const sortedPeople: Person[] = useMemo(() => {\n    if (people === undefined) {\n      return [];\n    }\n\n    const peopleCopy = [...people];\n    const sortBy = searchParams.get('sortBy') || '';\n\n    if (sortBy === '') {\n      return [...people];\n    }\n\n    return peopleCopy.sort((a, b) => {\n      let order;\n\n      if (searchParams.get('order') === SortOrder.ASC) {\n        order = 1;\n      } else {\n        order = -1;\n      }\n\n      switch (sortBy) {\n        case 'fatherName':\n        case 'motherName':\n        case 'name':\n        case 'sex':\n          return (a[sortBy] || '').localeCompare(b[sortBy] || '') * order;\n        case 'born':\n        case 'died':\n          return (a[sortBy] - b[sortBy]) * order;\n        default:\n          return 0;\n      }\n    });\n  }, [people, searchParams.get('sortBy'), searchParams.get('order')]);\n\n  const genClass = (title: string) => {\n    return [\n      'title',\n      { title__star: searchParams.get('sortBy') === title },\n      {\n        title__IconASC: searchParams.get('sortBy') === title\n          && searchParams.get('order') === SortOrder.ASC,\n      },\n      {\n        title__IconDESC: searchParams.get('sortBy') === title\n          && searchParams.get('order') === SortOrder.DESC,\n      },\n    ];\n  };\n\n  return (\n    <table className=\"PeopleTable\">\n      <thead>People Table</thead>\n      <input\n        value={searchQuery}\n        type=\"search\"\n        name=\"search\"\n        onChange={handleInput}\n      />\n      <tbody>\n        <tr>\n          <th\n            className={classnames(...genClass('name'))}\n            onClick={sortHandler('name')}\n          >\n            Name\n          </th>\n          <th\n            className={classnames(...genClass('sex'))}\n            onClick={sortHandler('sex')}\n          >\n            Sex\n          </th>\n          <th\n            className={classnames(...genClass('born'))}\n            onClick={sortHandler('born')}\n          >\n            Born\n          </th>\n          <th\n            className={classnames(...genClass('died'))}\n            onClick={sortHandler('died')}\n          >\n            Died\n          </th>\n          <th\n            className={classnames(...genClass('fatherName'))}\n            onClick={sortHandler('fatherName')}\n          >\n            Father Name\n          </th>\n          <th\n            className={classnames(...genClass('motherName'))}\n            onClick={sortHandler('motherName')}\n          >\n            Mother Name\n          </th>\n        </tr>\n        {sortedPeople\n          && sortedPeople.filter(person => (\n            person.name.toLowerCase().includes(searchString)\n            || person.fatherName?.toLowerCase().includes(searchString)\n            || person.motherName?.toLowerCase().includes(searchString)\n          ))\n            .map(person => (\n              <PersonRow key={person.name} person={person} />\n            ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default PeopleTable;\n","export const Home = () => {\n  return (\n    <h1> Home Page</h1>\n  );\n};\n\nexport default Home;\n","import { Link, useParams, useSearchParams } from 'react-router-dom';\nimport './PersonRow.scss';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  const { slug } = useParams();\n  const [searchParams] = useSearchParams();\n\n  const classNamePerson = `personSex--${person.sex === 'f' ? 'female' : 'male'}`;\n  const highlighted = person.slug === slug;\n\n  return (\n    <tr className={highlighted ? 'isActive' : ''}>\n      <td>\n        <Link to={`${person.slug}?${searchParams}`} className={classNamePerson}>\n          {person.name}\n        </Link>\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      {person.fatherName ? (\n        <td>\n          <Link to={`${person.father?.slug}?${searchParams}` || ''} className=\"personSex--male\">\n            {person.fatherName}\n          </Link>\n        </td>\n      )\n        : <td>No info</td>}\n      {person.motherName ? (\n        <td>\n          <Link to={`${person.mother?.slug}?${searchParams}` || ''} className=\"personSex--female\">\n            {person.motherName}\n          </Link>\n        </td>\n      )\n        : <td className=\"noInfo\">No info</td>}\n    </tr>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from './api';\nimport { PeopleTable } from './PeopleTable';\n\nexport const People = () => {\n  const [people, setPeople] = useState<Person[]>();\n\n  useEffect(() => {\n    getPeople().then((peopleArray:Person[]) => {\n      const extendedPeople = peopleArray.map(person => {\n        const personCopy = { ...person };\n\n        personCopy.mother = peopleArray.find(\n          person2 => person.motherName === person2.name,\n        );\n\n        personCopy.father = peopleArray.find(\n          person2 => person.fatherName === person2.name,\n        );\n\n        return personCopy;\n      });\n\n      setPeople(extendedPeople);\n    });\n  }, []);\n\n  return (\n    <>\n      <h1> People Page</h1>\n      <PeopleTable people={people} />\n    </>\n  );\n};\n\nexport default People;\n","/* eslint-disable */\r\nconst baseUrl= 'https://mate-academy.github.io/react_people-table/api/people.json';\r\n\r\nexport const getPeople = () => {\r\n  return fetch(baseUrl)\r\n    .then(response => response.json());\r\n};","import './NotFound.scss';\n\nexport const NotFound = () => {\n  return (\n    <div className=\"NotFound\"> Page not found</div>\n  );\n};\n\nexport default NotFound;\n","import { Link } from 'react-router-dom';\n\nexport const Header = () => {\n  return (\n    <div>\n      <Link to=\"/home\">\n        Home\n      </Link>\n      <Link to=\"/people\">\n        People\n      </Link>\n    </div>\n  );\n};\n\nexport default Header;\n","import './App.scss';\nimport {\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\nimport { Home } from './Home';\nimport { People } from './People';\nimport { NotFound } from './NotFound';\nimport { Header } from './Header';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/people\" element={<People />}>\n            <Route path=\":slug\" element={<People />} />\n          </Route>\n          <Route path=\"*\" element={<NotFound />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n        </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}